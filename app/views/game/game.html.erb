<script>
  var c_img;
  var n_img;
  var nuke;
  var nucleotides;
  var aminoAcids;
  var glucose;
  var atp;
  var mito;
  var er;
  var m_img;
  var e_img;
  var notifier;
  var m_button;
  var membrane_hp;
  var invaderVirae;
  var ivTask;
  var radiation;
  var taskManager;
  var tasks;
  var tasksLength;
  var noTask;
  var dice;
  var dicer;
  var golgiBody;
  var gameOverSound;
  var notifySound;
  var virusSound;
  var geneRegulator;
  var geneRegulate;

  function preload(){
    n_img = loadImage('assets/nucleusiguess.png');
    m_img = loadImage('assets/mitochondrion.png');
    e_img = loadImage('assets/er.png');
    c_img = loadImage('assets/membrane.png');
    g_img = loadImage('assets/golgibody.png');
    gameOverSound = loadSound('assets/gameOverSound.mp3');
    notifySound = loadSound('assets/Notify.mp3');
    virusSound = loadSound('assets/virus_attack.mp3');
  }

  function setup(){
    createCanvas(1000,570);
    gameOverSound.setVolume(1);
    notifySound.setVolume(1);
    virusSound.setVolume(1);
    atp = new Resource('ATP',300,125,125,0,0,100);
    nucleotides = new Resource('NUCLEOTIDES',100,255,0,0,250, 100);
    aminoAcids = new Resource('AMINO-ACIDS',200,0,255,0,250, 100);
    glucose = new Resource('GLUCOSE',0,0,0,255,250);
    mito = new Mitochondrion(m_img,width/3,height/4,((m_img.width)/2),[m_button]);
    er = new Organellee('Endoplasmic Reticulum',e_img,width/2+n_img.width-10,height/2-20);
    notifier = new Notifier();
    invaderVirae = new InvaderVirae();
    radiation = new Radiation();
    tasks = [radiation];
    tasksLength = tasks.length;
    for(var i=0;i<tasksLength*2;i++){
      noTask = new NoTask();
      tasks.push(noTask);
    }
    taskManager = new TaskManager(tasks);
    dice = function(){
      invaderVirae.destroy(1);
    };
    geneRegulate = function(){
      radiation.fix()
    };
    dicer = new Protein(10,10,dice,'Create Dicer Enzymes',width-290,height-70);
    geneRegulator = new Protein(60,60,geneRegulate,'Create Gene Regulators',width-140,height-70);
    nuke = new Nucleus(n_img,width/2,height/2,[dicer,geneRegulator]);
    golgiBody = new GolgiBody(g_img,width/2,height/4);
    this.gameOverMessage = '';
  }

  function draw(){
    background(130);

    if (this.gameOver) {
      stroke(0);
      fill(128);
      rect(0,0,width,height);
      stroke(255,255,0);
      fill(255,0,0);
      textSize(150);
      text('GAME OVER',0,0,width,height);
      textSize(75);
      text(Math.round(taskManager.timeAlive/60)+' seconds alive',0,300);
      text(this.gameOverMessage , 0, 450);
    } else {
      image(c_img,250,75);
      nuke.display();
      atp.display();
      glucose.display();
      aminoAcids.display();
      nucleotides.display();
      mito.display();
      er.display();
      notifier.display();
      golgiBody.display();
      taskManager.play();
      if (taskManager.isTaskFailed()) {
        this.gameOver = true;
        gameOverSound.play();
        httpPost('/score','json',{score: Math.round(taskManager.timeAlive/60), authenticity_token: "<%= form_authenticity_token %>"}, function(res) {
          this.gameOverMessage = res.message;
        });
      }
    }


  }

  function mouseMoved() {
    mito.mouseMoved();
    golgiBody.mouseMoved();
    nuke.mouseMoved();
    er.mouseMoved();
  }

  function mousePressed(){
    mito.mousePressed();
    if(mito.menuOpen()) {
      nuke.closeMenu();
      golgiBody.closeMenu();
    }
    nuke.mousePressed();
    if(nuke.menuOpen()) {
      mito.closeMenu();
      golgiBody.closeMenu();
    }
    golgiBody.mousePressed();
    if(golgiBody.menuOpen()) {
      mito.closeMenu();
      nuke.closeMenu();
    }
  }
</script>